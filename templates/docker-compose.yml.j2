---
version: '3.7'
services:
  node:
    container_name: '{{ nim_waku_cont_name }}'
    image: '{{ nim_waku_cont_image }}'
    labels:
      # auto-updating of docker image
      com.centurylinklabs.watchtower.enable: 'true'
    deploy:
      resources:
        limits:
          cpus: '{{ nim_waku_cpu_limit | float }}'
          memory: '{{ nim_waku_mem_limit }}M'
        reservations:
          memory: '{{ nim_waku_mem_reserve }}M'
      restart_policy:
        condition: '{{ nim_waku_restart_condition }}'
    volumes:
      - '{{ nim_waku_node_db_path }}:/data'
{% if nim_waku_websocket_enabled %}
      - '{{ nim_waku_websocket_ssl_dir }}:{{ nim_waku_websocket_ssl_dir | mandatory }}'
{% endif %}
    ports:
      - '{{ nim_waku_rpc_tcp_addr }}:{{ nim_waku_rpc_tcp_port }}:{{ nim_waku_rpc_tcp_port }}/tcp'
      - '{{ nim_waku_p2p_tcp_port }}:{{ nim_waku_p2p_tcp_port }}/tcp'
      - '{{ nim_waku_p2p_udp_port }}:{{ nim_waku_p2p_udp_port }}/udp'
      - '{{ nim_waku_metrics_port }}:{{ nim_waku_metrics_port }}/tcp'
      - '{{ nim_waku_websock_port }}:{{ nim_waku_websock_port }}/tcp'
      - '{{ nim_waku_disc_v5_port }}:{{ nim_waku_disc_v5_port }}/udp'
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:{{ nim_waku_metrics_port }}/health"]
      interval: 30s
      retries: 3
    command: |
{% if "v1" in nim_waku_cont_tag %}
      --discovery={{ nim_waku_discovery_enabled }}
{% else %}{# if "v1" in nim_waku_cont_tag #}
{% for protocol in nim_waku_protocols_enabled|difference(nim_waku_protocols_available) %}
      --{{ protocol }}=false
{% endfor %}
{% for protocol in nim_waku_protocols_enabled %}
      --{{ protocol }}=true
{% endfor %}
      --db-path=/data
      --rpc-admin=true
      --persist-peers=true
      --keep-alive=true
      --persist-messages=true
      --max-connections={{ nim_waku_p2p_max_connections }}
      --store-capacity={{ nim_waku_store_capacity }}
      --dns4-domain-name={{ nim_waku_dns4_domain_name }}
{% if nim_waku_sqlite_store %}
      --sqlite-store=true
      --sqlite-retention-time={{ nim_waku_sqlite_retention_time }}
{% endif %}
{% if "rln-relay" in nim_waku_protocols_enabled %}
      --rln-relay-content-topic={{ nim_waku_rln_relay_content_topic }}
{% endif -%}
{% if nim_waku_websocket_enabled %}
      --websocket-port={{ nim_waku_websock_port }}
{% if nim_waku_websocket_secure_enabled %}
      --websocket-secure-support=true
      --websocket-secure-key-path={{ nim_waku_websocket_ssl_key | mandatory }}
      --websocket-secure-cert-path={{ nim_waku_websocket_ssl_cert | mandatory }}
{% endif %}
{% endif %}
{% if nim_waku_dns_disc_enabled %}
      --dns-discovery=true
      --dns-discovery-url={{ nim_waku_dns_disc_url | mandatory }}
{% endif %}
{% if nim_waku_disc_v5_enabled %}
      --discv5-discovery=true
      --discv5-udp-port={{ nim_waku_disc_v5_port }}
      --discv5-enr-auto-update={{ nim_waku_disc_v5_enr_auto_update }}
{% for node in nim_waku_disc_v5_bootstrap_nodes %}
      --discv5-bootstrap-node={{ node }}
{% endfor %}
{% endif %}
{% endif %}{# if "v1" in nim_waku_cont_tag #}
{% if nim_waku_node_key is defined %}
      --nodekey={{ nim_waku_node_key | mandatory }}
{% endif %}
      --nat=extip:{{ nim_waku_public_address }}
      --log-level={{ nim_waku_log_level }}
      --rpc-port={{ nim_waku_rpc_tcp_port }}
      --rpc-address=0.0.0.0
      --tcp-port={{ nim_waku_p2p_tcp_port }}
      --metrics-server={{ nim_waku_metrics_enabled }}
      --metrics-server-port={{ nim_waku_metrics_port }}
      --metrics-server-address=0.0.0.0
{% if nim_waku_websockify_enabled %}

  websockify:
    container_name: '{{ nim_waku_websockify_cont_name }}'
    image: '{{ nim_waku_websockify_cont_image }}'
    deploy:
      restart_policy:
        condition: '{{ nim_waku_restart_condition }}'
{% if nim_waku_websockify_ssl_cert %}
    volumes:
      - '{{ nim_waku_websockify_ssl_dir }}:{{ nim_waku_websockify_ssl_dir | mandatory }}'
{% endif %}
    ports:
      - '{{ nim_waku_websockify_cont_port }}:{{ nim_waku_websockify_cont_port }}/tcp'
    depends_on:
      - node
    command: |
{% if nim_waku_websockify_verbose %}
      --verbose
{% endif %}
{% if nim_waku_websockify_ssl_cert and nim_waku_websockify_ssl_key %}
      --cert={{ nim_waku_websockify_ssl_cert }}
      --key={{ nim_waku_websockify_ssl_key }}
{% endif %}
      {{ nim_waku_websockify_cont_port }}
      node:{{ nim_waku_p2p_tcp_port }}
{% endif %}
