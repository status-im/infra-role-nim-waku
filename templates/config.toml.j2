# WARNING: Do not put sensitive configuration here. Use Docker Compose file instead.

### Protocols
{% for protocol in nim_waku_protocols_enabled|difference(nim_waku_protocols_available) %}
{{ protocol }} = false
{% endfor %}
{% for protocol in nim_waku_protocols_enabled %}
{{ protocol }} = true
{% endfor %}

### General
dns4-domain-name = '{{ nim_waku_dns4_domain_name }}'
nat = 'extip:{{ nim_waku_public_address }}'
log-level = '{{ nim_waku_log_level | upper }}'

### Nework
peer-persistence = {{ nim_waku_peer_persistence | to_json }}
keep-alive = {{ nim_waku_keep_alive | to_json }}
max-connections = {{ nim_waku_p2p_max_connections }}
{% if nim_waku_max_msg_size is defined %}
max-msg-size = '{{ nim_waku_max_msg_size }}'
{% endif %}
{% if nim_waku_ip_colocation_limit is defined %}
ip-colocation-limit = {{ nim_waku_ip_colocation_limit }}
{% endif %}

### Topics
{% if nim_waku_cluster_id is defined %}
cluster-id = {{ nim_waku_cluster_id }}
{% endif %}
{% if nim_waku_relay_shard_manager is defined %}
relay-shard-manager = {{ nim_waku_relay_shard_manager | to_json }}
{% endif %}
pubsub-topic = [
{% for topic in nim_waku_pubsub_topics %}
  '{{ topic }}',
{% endfor %}
]
protected-topic = [
{% for topic in nim_waku_protected_topics %}
  '{{ topic }}',
{% endfor %}
]

{% if "store" in nim_waku_protocols_enabled %}
### Storage
store-message-db-vacuum = {{ nim_waku_store_vacuum | to_json }}
store-message-retention-policy = '{{ nim_waku_store_message_retention_policy }}'

{% endif %}
### Ports
tcp-port = {{ nim_waku_p2p_tcp_port }}

metrics-server = {{ nim_waku_metrics_enabled | to_json }}
metrics-server-port = {{ nim_waku_metrics_port }}
metrics-server-address = '0.0.0.0'

{% if nim_waku_rest_enabled %}
rest = true
rest-address = '0.0.0.0'
rest-port = {{ nim_waku_rest_port }}
rest-admin = {{ ("admin" in nim_waku_rest_apis_enabled) | bool | to_json }}
rest-private = {{ ("private" in nim_waku_rest_apis_enabled) | bool | to_json }}
{% endif %}

{% if nim_waku_websocket_enabled %}
websocket-port = {{ nim_waku_websock_port }}
{% if nim_waku_websocket_secure_enabled %}
websocket-secure-support = true
websocket-secure-key-path = '{{ nim_waku_websocket_ssl_key | mandatory }}'
websocket-secure-cert-path = '{{ nim_waku_websocket_ssl_cert | mandatory }}'
{% endif %}
{% endif %}

{% if nim_waku_dns_disc_enabled %}
### Discovery
dns-discovery = true
dns-discovery-url = '{{ nim_waku_dns_disc_url | mandatory }}'
{% endif %}
{% if nim_waku_disc_v5_enabled %}
discv5-discovery = true
discv5-udp-port = {{ nim_waku_disc_v5_port }}
discv5-enr-auto-update = {{ nim_waku_disc_v5_enr_auto_update | to_json }}
discv5-bootstrap-node = [
{% for node in nim_waku_disc_v5_bootstrap_nodes %}
  '{{ node }}',
{% endfor %}
]
{% endif %}

{% if "rln-relay" in nim_waku_protocols_enabled %}
rln-relay-dynamic = {{ nim_waku_rln_relay_dynamic | to_json }}
rln-relay-tree-path = '{{ nim_waku_rln_relay_tree_path }}'
{% if nim_waku_rln_relay_dynamic %}
rln-relay-eth-contract-address = '{{ nim_waku_rln_relay_eth_contract_address }}'
rln-relay-eth-client-address = '{{ nim_waku_rln_relay_eth_client_address | mandatory }}'
{% endif %}
{% if nim_waku_rln_keystore_active %}
rln-relay-cred-path = '{{ nim_waku_rln_keystore_path }}'
{% endif %}
{% endif %}


{% if "store-sync" in nim_waku_protocols_enabled %}
store-sync-interval = {{ nim_waku_store_sync_interval }}
store-sync-range = {{ nim_waku_store_sync_range }}
{% endif %}

