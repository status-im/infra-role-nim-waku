---
- name: Define Consul services
  set_fact:
    consul_services:
      - id:   '{{ nim_waku_cont_name }}'
        name: '{{ nim_waku_consul_service_name }}'
        port: '{{ nim_waku_p2p_tcp_port }}'
        address: '{{ ansible_host }}'
        tags: ['env:{{ env }}', 'stage:{{ stage }}', 'nim', 'waku', 'libp2p']
        meta:
          timestamp:  '{{ ansible_date_time.iso8601 }}'
          protocols:  '{{ nim_waku_protocols_enabled   | join(",") }}'
          enrtree:    '{{ nim_waku_dns_disc_url        | default("missing") }}'
          enr:        '{{ nim_waku_libp2p_enr_uri      | default("unknown") }}'
          multiaddr:  '{{ nim_waku_libp2p_multiaddr    | default("unknown") }}'
          websocket:  '{{ nim_waku_websocket_multiaddr | default("missing") }}'
          image:      '{{ nim_waku_cont_image }}'
          commit:     '{{ nim_waku_cont.container.Config.Labels.commit  | default("unknown") }}'
          version:    '{{ nim_waku_cont.container.Config.Labels.version | default("unknown") }}'
          # Legacy key used by fleets.status.im.
          node_enode: '{{ nim_waku_libp2p_multiaddr | default("unknown") }}'
        checks:
          - name: '{{ nim_waku_cont_name }}-health'
            type: 'tcp'
            tcp: 'localhost:{{ nim_waku_p2p_tcp_port }}'
            # Single-threated nature blocking responses due to DB I/O.
            disabled: true

      - id:   '{{ nim_waku_cont_name }}-enr'
        name: '{{ nim_waku_consul_service_name }}-enr'
        port: '{{ nim_waku_p2p_tcp_port }}'
        address: '{{ ansible_host }}'
        tags: ['env:{{ env }}', 'stage:{{ stage }}', 'nim', 'waku', 'enr']
        meta:
          timestamp:  '{{ ansible_date_time.iso8601 }}'
          node_enode: '{{ nim_waku_libp2p_enr_uri | default("unknown") }}'
          protocols:  '{{ nim_waku_protocols_enabled | join(",") }}'
          image:      '{{ nim_waku_cont_image }}'
          commit:     '{{ nim_waku_cont.container.Config.Labels.commit  | default("unknown") }}'
          version:    '{{ nim_waku_cont.container.Config.Labels.version | default("unknown") }}'

      - id:   '{{ nim_waku_cont_name }}-metrics'
        name: '{{ nim_waku_consul_service_name }}-metrics'
        port: '{{ nim_waku_metrics_port }}'
        address: '{{ ansible_local.wireguard.address }}'
        tags: ['env:{{ env }}', 'stage:{{ stage }}', 'nim', 'waku', 'metrics']
        meta:
          container: '{{ nim_waku_cont_name }}'
        checks:
          - name: 'beacon-node-metrics-health'
            type: 'http'
            http: 'http://localhost:{{ nim_waku_metrics_port }}/health'
            # Single-threated nature blocking responses due to DB I/O.
            disabled: true

      - id:   '{{ nim_waku_cont_name }}-rest'
        name: '{{ nim_waku_consul_service_name }}-rest'
        port: '{{ nim_waku_rest_port }}'
        address: '{{ ansible_local.wireguard.vpn_ip }}'
        tags: ['env:{{ env }}', 'stage:{{ stage }}', 'nim', 'waku', 'rest']
        checks:
          - id: '{{ nim_waku_cont_name }}-rest-health'
            type: 'http'
            http: 'http://localhost:{{ nim_waku_rest_port }}/debug/v1/version'

- name: Define Websocket service
  when: nim_waku_websocket_enabled
  set_fact:
    consul_service_websocket:
      - id:   '{{ nim_waku_cont_name }}-websocket'
        name: '{{ nim_waku_consul_service_name }}-websocket'
        port: '{{ nim_waku_websock_port }}'
        address: '{{ ansible_host }}'
        tags: ['env:{{ env }}', 'stage:{{ stage }}', 'nim', 'waku', 'websocket']
        meta:
          timestamp:  '{{ ansible_date_time.iso8601 }}'
          node_enode: '{{ nim_waku_websocket_multiaddr }}'
          protocols:  '{{ nim_waku_protocols_enabled | join(",") }}'
          image:      '{{ nim_waku_cont_image }}'
          commit:     '{{ nim_waku_cont.container.Config.Labels.commit  | default("unknown") }}'
          version:    '{{ nim_waku_cont.container.Config.Labels.version | default("unknown") }}'
        checks:
          - name: '{{ nim_waku_cont_name }}-websocket-health'
            type: 'script'
            script: 'websocat -vk1E wss://127.0.0.1:{{ nim_waku_websock_port }}'
            interval: '60s'
            # Websocket not responding due to TCP socket leak:
            # https://github.com/status-im/nwaku/issues/1186
            disabled: true

- name: Add Websocket Consul service
  when: nim_waku_websocket_enabled
  set_fact:
    consul_services: '{{ consul_services + consul_service_websocket }}'

- name: 'Consul service definition - {{ nim_waku_cont_name }}'
  include_role: name=infra-role-consul-service
  vars:
    consul_config_name:                      '{{ nim_waku_consul_config_name }}'
    consul_default_check_disabled:           '{{ nim_waku_consul_check_disabled }}'
    consul_default_check_interval:           '{{ nim_waku_consul_check_interval }}'
    consul_default_check_timeout:            '{{ nim_waku_consul_check_timeout }}'
    consul_default_success_before_passing:   '{{ nim_waku_consul_success_before_passing }}'
    consul_default_failures_before_warning:  '{{ nim_waku_consul_failures_before_warning }}'
    consul_default_failures_before_critical: '{{ nim_waku_consul_failures_before_critical }}'
