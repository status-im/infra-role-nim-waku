---
nim_waku_cont_tag: 'latest'
nim_waku_cont_image: 'wakuorg/nwaku:{{ nim_waku_cont_tag }}'
nim_waku_cont_name: 'nim-waku'
nim_waku_cont_vol: '/docker/{{ nim_waku_cont_name }}'

# Node database path
nim_waku_node_db_path: '{{ nim_waku_cont_vol }}/data'
# TMPDIR for Sqlite to use when acuuming to free space. Takes effect on creation.
nim_waku_node_tmp_path: '{{ nim_waku_cont_vol }}/data/tmp'

# Value for private node key which is used to create public enode key
#nim_waku_node_key: ~
nim_waku_node_key_file_path: '{{ nim_waku_cont_vol }}/nodekey'

# Optional cluster-id flag
#nim_waku_cluster_id: 1

# Protocols
nim_waku_protocols_available: ['relay', 'store', 'filter', 'lightpush', 'rln-relay', 'peer-exchange']
nim_waku_protocols_enabled: ['relay', 'store', 'filter', 'lightpush']

# Topic configuration
nim_waku_pubsub_topics: ['/waku/2/default-waku/proto']
# Topics and its public key to be used for message validation.
nim_waku_protected_topics: []

# Available: error, warn, info, debug
nim_waku_log_level: 'info'

# experimental discovery support
nim_waku_discovery_enabled: false

# DNS Discovery
nim_waku_dns_disc_enabled: false
# nim_waku_dns_disc_url: 'enrtree://AOFTICU2XWDULNLZGRMQS4RIZPAZEHYMV4FYHAPW563HNRAOERP7C@test.waku.nodes.status.im'

# Discovery V5
nim_waku_disc_v5_enabled: false
nim_waku_disc_v5_enr_auto_update: false
nim_waku_disc_v5_bootstrap_nodes: []

# FQDN used iin announced dns4 multiaddresses.
nim_waku_dns4_domain_name: '{{ ansible_hostname }}'

nim_waku_public_address: '{{ ansible_host }}'
nim_waku_rpc_tcp_addr: '127.0.0.1'
nim_waku_rpc_tcp_port: 8545
nim_waku_websock_port: 8000
nim_waku_disc_v5_port: 9000
nim_waku_p2p_tcp_port: 30303
nim_waku_p2p_udp_port: 30303

# P2P Connections
nim_waku_p2p_max_connections: 150
nim_waku_keep_alive: true
nim_waku_peer_persistence: false

# Store
nim_waku_store_message_retention_policy: 'time:604800' # 7 days
nim_waku_store_vacuum: false
nim_waku_store_message_db_url: 'sqlite:///data/store.sqlite3'

# RLN Relay parameters
nim_waku_rln_relay_tree_path: '/data/rln_relay_tree'
nim_waku_rln_relay_dynamic: true
nim_waku_rln_relay_eth_account_address: '0000000000000000000000000000000000000000'
nim_waku_rln_relay_eth_contract_address: '0xF471d71E9b1455bBF4b85d475afb9BB0954A29c4'
#nim_waku_rln_relay_eth_client_address: 'http://geth.example.org:8545'

# metrics are disabled by default
nim_waku_metrics_enabled: true
nim_waku_metrics_port: 8008

# resource limits, mem in MB
nim_waku_cpu_limit: 0.70
nim_waku_mem_limit: '{{ (ansible_memtotal_mb * 0.7) | int }}'
nim_waku_cpu_reserve: 0.20
nim_waku_mem_reserve: '{{ (ansible_memtotal_mb * 0.2) | int }}'

#websocket config in nim waku
nim_waku_websocket_enabled: false
nim_waku_websocket_secure_enabled: false
nim_waku_websocket_domain: '{{ nim_waku_dns4_domain_name }}'
#nim_waku_websocket_ssl_dir: '/etc/letsencrypt'
#nim_waku_websocket_ssl_cert: '/etc/letsencrypt/live/{{ nim_waku_websocket_domain }}/fullchain.pem'
#nim_waku_websocket_ssl_key: '/etc/letsencrypt/live/{{ nim_waku_websocket_domain }}/privkey.pem'

# WebSockets via Websockify
nim_waku_websockify_enabled: false
nim_waku_websockify_verbose: false
nim_waku_websockify_cont_name: 'websockify'
nim_waku_websockify_cont_tag: 'v0.10.0'
nim_waku_websockify_cont_image: 'statusteam/websockify:{{ nim_waku_websockify_cont_tag }}'
nim_waku_websockify_cont_port: 8080
nim_waku_websockify_domain: '{{ nim_waku_dns4_domain_name }}'
#nim_waku_websockify_ssl_dir: ~
#nim_waku_websockify_ssl_cert: ~
#nim_waku_websockify_ssl_key: ~

# For querying for fleet peers
consul_url: 'http://localhost:8500/v1/catalog'

# container restart policy
nim_waku_restart_condition: 'any'
nim_waku_restart_window_sec: 120

# Consul Service
nim_waku_consul_success_before_passing: 0
nim_waku_consul_failures_before_warning: 1
nim_waku_consul_failures_before_critical: 2

# general container management
compose_recreate: 'smart'
compose_state: 'present'
compose_restart: false
